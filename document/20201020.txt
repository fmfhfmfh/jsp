RequestCounterFilter
LoginServlet

// 전처리 (요청이 요청을 처리할 servlet으로 가기 전)
chain.doFilter
// 후처리 (생성된 응답이 클라이언트에게 가는 중)

전처리 ==> servlet ==> 후처리

1. RequestCounterFilter 전처리 부분 chain.doFilter 호출전
2. loginServlet doGet
3. RequestCounterFilter 후처리 부분 chain.doFilter 호출후


Wrapper
int ==> Integer

HttpServletRequest ==> 새로운 객체로 생성
parameter 수정은 HttpServletRequest 객체에서는 불가능

request.getParameter() 메서드는 존재 (getter) 
request.setParameter() 메서드는 없음 (setter) ****
==> 파라미터를 개발자가 임의로 수정하거나 추가 할 수 없다
	==> 파라미터를 수정하기 위해서는
		HttpServletRequest 객체를 이용하여 새로운 wrapper 클래스를 생성
	 	기존 request객체를 대체

request.getAttribute() 메서드는 존재 (getter) 
request.setAttribute() 메서드는 존재 (setter) 

filter/requestParameter.jsp 에서
request.getParameterMap()메서드를 통해 얻은 Map객체에
파라미터를 임의로 추가, 수정하는 작업이 불가능

request.getParameterMap()를 통해 새로운 map객체를 생성하고
해당 map객체에 필요한 파라미터를 추가, 이후 프로세스에서는 새롭게 만든 map객체로 전달

1. map객체를 조작할 Filter
2. HttpSerlvetRequest객체를 대신할 wrapper
   HttpSerlvetRequestWrapper 클래스를 상속	